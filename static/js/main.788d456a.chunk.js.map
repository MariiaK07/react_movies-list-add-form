{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","handleChange","event","target","name","value","setState","trim","handleSubmit","preventDefault","newMovie","props","onAdd","this","onSubmit","type","placeholder","maxLength","onChange","required","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.788d456a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event: {\n    target: {\n      name: string;\n      value: string;\n    };\n  }): void => {\n    const {\n      name,\n      value,\n    } = event.target;\n\n    this.setState(state => ({\n      ...state,\n      [name]: value.trim(),\n    }));\n  };\n\n  handleSubmit = (event: {\n    preventDefault: () => void;\n  }) => {\n    event.preventDefault();\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(newMovie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <form\n        className=\"newMovie\"\n        onSubmit={this.handleSubmit}\n      >\n        <h1\n          className=\"newMovie__heading\"\n        >\n          Add a new movie\n        </h1>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          placeholder=\"Enter a movie title\"\n          maxLength={30}\n          onChange={this.handleChange}\n          className=\"newMovie__detail\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"description\"\n          value={description}\n          placeholder=\"Enter a movie description\"\n          maxLength={250}\n          onChange={this.handleChange}\n          className=\"newMovie__detail\"\n          required\n        />\n        <input\n          type=\"url\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          placeholder=\"Enter a movie imgUrl\"\n          onChange={this.handleChange}\n          className=\"newMovie__detail\"\n          required\n        />\n        <input\n          type=\"url\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          placeholder=\"Enter a movie imdbUrl\"\n          onChange={this.handleChange}\n          className=\"newMovie__detail\"\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          value={imdbId}\n          placeholder=\"Enter a movie imdbId\"\n          maxLength={9}\n          onChange={this.handleChange}\n          className=\"newMovie__detail\"\n          required\n        />\n        <button\n          type=\"submit\"\n          className=\"newMovie__button\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}